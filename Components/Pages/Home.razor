@page "/"
@using Radzen
@using System.IO
@using EZip.Controller
@inject IJSRuntime JSRuntime

@inject IDirectory test
@inject EasyLogger logger

<!-- 当前路径所在和提供切换路径的地方-->
<p>当前路径：@currentPath</p>
<RadzenTextBox @bind-Value="newPath" Placeholder="输入新路径" Style="width: 300px;" />
<RadzenButton Text="切换路径" ButtonStyle="ButtonStyle.Primary" Click="ChangePath" />

<hr />

<!-- 展示目录和文件 -->
@if (directoryItems != null)
{
    <h3>当前目录下的内容：</h3>
    <ul>
        @foreach (var item in directoryItems)
        {
            <li>@item</li>
        }
    </ul>
}
else
{
    <p>加载目录失败，或当前目录为空。</p>
}


@code {
    private string currentPath = "C:\\";
    private string newPath = string.Empty;
    private List<string>? directoryItems;

    // this method will be called when the component is initialized
    protected override void OnInitialized()
    {
        currentPath = test.NowPath;
        LoadDirectoryItems(currentPath);
    }

    /// <summary>
    /// when the button is clicked, this method will be called
    /// this function will load the directory items in the new path
    /// </summary>
    /// <param name="path"></param>
    private void LoadDirectoryItems(string path)
    {
        try
        {
            if (Directory.Exists(path))
            {
                var directories = Directory.GetDirectories(path);
                var files = Directory.GetFiles(path);
                directoryItems = directories.Concat(files).ToList();
                currentPath = path;
            }
            else
            {
                directoryItems = null;
                currentPath = "无效路径";
            }
        }
        catch (Exception ex)
        {
            directoryItems = null;
            currentPath = $"错误: {ex.Message}";
        }
        StateHasChanged();
    }

    private void ChangePath()
    {
        if (!string.IsNullOrEmpty(newPath))
        {
            LoadDirectoryItems(newPath);
        }
    }
}